{
  "hash": "182b01823f06d8c29ed08b3399206e65",
  "result": {
    "engine": "jupyter",
    "markdown": "\\newcommand{\\d}{\\,\\mathrm{d}}\n\\newcommand{\\e}{\\mathrm{e}}\n\\newcommand{\\E}{\\mathbb{E}}\n\n\n\n# Brownian Motion {#sec-c:brownian} \n\n::: {.cell execution_count=1}\n\n::: {.cell-output .cell-output-display}\n```\nUnable to display output for mime type(s): text/html\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<IPython.core.display.HTML object>\n```\n:::\n:::\n\n\nBrownian motion is a fundamental tool for modeling variables that change randomly over time.  Consider predicting a future stock price.  We don't know today what the price will be tomorrow, nor what it will be the following day, nor what it will be the day after that.  We can regard the price three days from now as today's price plus the change from today to tomorrow plus the change from tomorrow to the following day plus the change from that day to the next.  Thus, there are three random changes in this small example.  A simple way to model this situation is to assume that each change is a normally distributed random variable with some mean and variance.  Thus, the price in three days is viewed as today's price plus the sum of three normal increments.\n\nRather than predicting daily changes as in the previous paragraph, we might be interested in predicting hourly changes or even minute-to-minute changes.  This will lead to more, but smaller, increments.  A Brownian motion is a model of changes at all frequencies, with all changes being normally distributed.\n\nWe will ultimately deal with different means and different variances, but we start with what is called a standard Brownian motion, which is similar to beginning the study of normal random variables by studying a standard normal variable, that is, a normal random variable with a zero mean and a unit variance.  The definition of a standard Brownian motion is that its change over any time interval \n\n- is normally distributed\n- is independent of prior changes\n- has a zero mean\n- has a variance equal to the length of the time interval.\n\nThe last bullet point reflects the fact that things are more uncertain the further into the future we look.^[A formal definition of a Brownian motion would include a specification of the information that we have for predicting the future. The definition given here is correct when the only information is the past history of the Brownian motion.] \n\n## Brownian Paths\n\nWe call a variable that changes randomly over time a stochastic process.  A path of a stochastic process is a random function of time, recording how it evolves over time. \nWe can plot an approximate path of a Brownian motion by summing up normally distributed changes.  We take an interval of time $[0, t]$ and split it up as\n$$0=t_0 < t_1< \\cdots < t_{n-1} < t_n=t$$\nwhere the times $t_i$ are equally spaced, meaning that $t_i-t_{i-1} = t/n$, which we will call $\\Delta t$.  We generate $n$ normally distributed random variables with zero means and variance equal to $\\Delta t$ and define the approximate Brownian motion, which we call $B$, as the cumulative sum of the normal variables.  By convention, we start any Brownian motion at $B_0=0$.  Our approximation fits the definition of a standard Brownian motion, except that we have limited the frequency of the changes to $n$ changes within the interval.  By taking $n$ larger, we can always get a better approximation.  \n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np\nimport plotly.graph_objects as go\n\nn = 1000   # number of subdivisions\nt = 0.5    # last date\ndt = t/n\n\n# generate dB for each time step\ndB = np.random.normal(scale = np.sqrt(dt), size=n)\n\n# B starts at 0 and is cumulative sum of the dB\nB = np.zeros(n+1)\nB[1:] = dB.cumsum()\n\nfig = go.Figure()\nfig.add_trace(\n  go.Scatter(\n    x=np.arange(0, t+dt, dt), \n    y=B, \n    mode='lines', \n    hovertemplate='t = %{x:.2f}<br>B = %{y:.2f}<extra></extra>'  # \n    )\n)\n\nfig.update_layout(\n    showlegend=False,\n    xaxis_title='Time',\n    yaxis_title='Approximate Brownian Motion',\n    template='plotly_white',\n    height=300,\n)\n\nfig.show()\n```\n\n::: {#fig-brownian-path .cell-output .cell-output-display}\n```\nUnable to display output for mime type(s): application/vnd.plotly.v1+json, text/html\n```\n\nA path of an approximate Brownian motion with 1,000 normally distributed steps.\n:::\n:::\n\n\n## Binomial Approximation\n\nWe can also generate an approximate path of a Brownian motion by taking only up or down steps of a fixed size at each date, rather than using normally distributed steps.  We call this a binomial model.  A binomial model approximates  the normally distributed increments of a Brownian Motion due to the Central Limit Theorem, which says that an appropriately scaled sum of a large number of random variables has approximately a normal distribution.  The binomial approximation is often useful for pricing options, especially American options, as we will see.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport numpy as np\nimport plotly.graph_objects as go\n\nn = 1000   # number of subdivisions\nt = 0.5    # last date\ndt = t/n\nsqdt = np.sqrt(dt)\n\n# generate dB for each time step\ndB = np.random.choice([-sqdt, sqdt], size=n)\nB = np.zeros(n+1)\n\n# Brownian path starts at 0 and is cumulative sum of the dB\nB[1:] = dB.cumsum()\n\nfig = go.Figure()\nfig.add_trace(\n  go.Scatter(\n    x=np.arange(0, t+dt, dt), \n    y=B, \n    mode='lines', \n    hovertemplate='t = %{x:.2f}<br>B = %{y:.2f}<extra></extra>'  # \n    )\n)\n\nfig.update_layout(\n    showlegend=False,\n    xaxis_title='Time',\n    yaxis_title='Binomial Process',\n    template='plotly_white',\n    height=300,\n)\n\nfig.show()\n```\n\n::: {#fig-binomial-path .cell-output .cell-output-display}\n```\nUnable to display output for mime type(s): application/vnd.plotly.v1+json, text/html\n```\n\nA path of an approximate Brownian motion with 1,000 binomial steps.\n:::\n:::\n\n\n## Nonzero Quadratic Variation {#sec-s:quadraticvariation}\n\n@fig-brownian-path and @fig-binomial-path illustrate a distinctive characteristic of a Brownian motion: it jiggles rapidly, moving up and down in a very erratic way.  The name Brownian motion derives from the botanist Robert Brown's observations of the erratic behavior of particles suspended in a fluid.  The plot of other functions with which we may be familiar will be much smoother.  This is captured in the concept of quadratic variation.  \n\nConsider a discrete partition \n$$0=t_0 < t_1 < t_2 < \\cdots < t_n=t$$\nof the time interval $[0,t]$ as before.  Let $B$ be a Brownian motion and calculate the sum of squared changes\n$$\\sum_{i=1}^n (\\Delta B_{t_i})^2\\; ,$$\nwhere $\\Delta B_{t_i}$ denotes the change $B_{t_i}-B_{t_{i-1}}.$  If we consider finer partitions with the length of each time interval $t_i-t_{i-1}$ going to zero, the limit of the sum is called the quadratic variation of the process.  \\index{quadratic variation} For a Brownian motion, the quadratic variation over an interval $[0,t]$ is equal to $t$ with probability one.  Here is a plot of the quadratic variation (that is, the cumulative sum of squared changes) of the previous approximation of a Brownian motion.  The plot shows that the approximation has quadratic variation through each date $s \\le t$ that is approximately equal to $s$.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# using the approximate path created in the previous code block\n# quadratic variation is cumulative sum of squared changes\n\ndQ = dB**2\nQ = np.zeros(n+1)\nQ[1:] = dQ.cumsum()\n\nfig = go.Figure()\nfig.add_trace(\n  go.Scatter(\n    x=np.arange(0, t+dt, dt), \n    y=Q, \n    mode='lines', \n    hovertemplate='t = %{x:.2f}<br>B = %{y:.2f}<extra></extra>' \n    )\n)\n\nfig.update_layout(\n    showlegend=False,\n    xaxis_title='Time',\n    yaxis_title='Quadratic Variation',\n    template='plotly_white',\n    height=300\n)\nfig.show()\n```\n\n::: {#fig-quadratic-variation .cell-output .cell-output-display}\n```\nUnable to display output for mime type(s): application/vnd.plotly.v1+json, text/html\n```\n\nQuadratic variation of an approximate Brownian motion path with 1,000 normally distributed steps.\n:::\n:::\n\n\nTo better visualize the convergence of the quadratic variation of a Brownian motion as the number $n$ of subdivisions of the interval $[0, t]$ grows, we encourage readers to interact with the plot below, which simulates a handful of approximate Brownian paths and their quadratic variations.\n\n::: {#fig-interactive_quad_var fig-cap=\"Convergence of quadratic variation of approximate Brownian motions.\"}\n<iframe width=\"600\" height=\"500\" src=\"https://derivatives-book-26ac36570fb8.herokuapp.com/math_finance_book_plots/quad_var_plot\"></iframe>\n\n\n:::\n\nThe typical functions with which we are familiar are continuously differentiable.  If $x$ is a continuously differentiable function of time, then the quadratic variation of $x$ is zero.  A simple example is a linear function: $x_s = as$ for all $s$ for a constant $a$. Then, using the previous partition of the interval $[0, t]$, the sum of squared changes of the function from $0$ to $t$ is\n$$\\sum_{i=1}^n (\\Delta x_{t_i})^2 = \\sum_{i=1}^n  [a\\,\\Delta t]^2 = na^2 (\\Delta t)^2 = na^2 \\left(\\frac{t}{n}\\right)^2 = \\frac{a^2t^2}{n} \\rightarrow 0$$\nas $n \\rightarrow \\infty$.  \nFor example, if $a=1$ and $n=1000$, then the sum of squared changes from date $0$ to date $1$ is \n$1000 \\times 0.001^2 = 0.001$.  Essentially the same argument shows that the quadratic variation of any continuously differentiable function is zero, because such a function is approximately linear at each point.  Thus, the jiggling of a Brownian motion, which leads to the nonzero quadratic variation, is quite unusual. \n\n\n## Infinite Total Variation\n\nTo explain exactly how unusual the nonzero quadratic variation is, it is helpful to consider total variation, \\index{total variation} which is defined in the same way as quadratic variation but with the squared changes $(\\Delta B_{t_i})^2$ replaced by the absolute values of the changes $|\\Delta B_{t_i}|.$  A general mathematical theorem states that, if the quadratic variation of a continuous function is nonzero, then its total variation is infinite.  Therefore, each path of a Brownian motion has infinite total variation (with probability one).  This means that, to draw a true path of a Brownian motion on a blackboard, we would need an infinite amount of chalk!\n\nIf we zoom in close enough in @fig-brownian-path, we can see the linear steps $\\Delta B$.  However, if we could zoom in on a segment of a path of a true Brownian motion, it would look much the same as the entire picture does to the naked eye---no matter how small the segment, we would still see the characteristic jiggling.  That jiggling, even at microscopic scales, is the source of the infinite variation.\n\n## Continuous Martingales and Levy's Theorem\n\nOne may well question why we should be interested in this curious mathematical object.  The reason is that asset pricing inherently involves martingales (variables that evolve randomly over time in such a way that their expected changes are always zero), as our fundamental pricing formula (@eq-formula) establishes.  Furthermore, continuous processes (variables whose paths are continuous functions of time) are much more tractable mathematically than are processes that can jump at some instants.   So, we are led to a study of continuous martingales.  An important fact is that any non-constant continuous martingale must have infinite total variation.  So, the normal functions with which we are familiar are left behind once we enter the study of continuous martingales.  \n\nThere remains perhaps the question of why we focus on Brownian motion within the world of continuous martingales.  The answer here is that any continuous martingale is really just a transformation of a Brownian motion.  This is a consequence of the following important fact, which is known as Levy's theorem: \\index{Levy's theorem}\n\n::: Principle\n## \nA continuous martingale is a Brownian motion if and only if its quadratic variation over each time interval $[s, t]$ equals $t-s$.\n:::\n\nThus, among continuous martingales, a Brownian motion is distinguished by the condition that its quadratic variation over each time interval is equal to the length of the interval.  This is really just a normalization.  A different continuous martingale may have a different quadratic variation, but it can be converted to a Brownian motion by changing the clock speed to measure time according to the quadratic variation.  Furthermore, many continuous martingales can be constructed as stochastic integrals with respect to a Brownian motion.  We take up that topic in the next chapter.\n\n## Correlation of Brownian Motions {#sec-s:correlation}\n\nConsider two standard Brownian motions $B_1$ and $B_2$.\nThe relation between the two Brownian motions is determined by their covariance or correlation.  Given dates $s<t$, we know that both changes $B_{1t}-B_{1s}$ and $B_{2t}-B_{2s}$ are normally distributed with zero means and variances equal to $t-s$, given information at date $s$.  There is a stochastic process $\\rho$ such that the covariance \\index{covariance} of these two normally distributed random variables, given the information at date $s$, is \n$$\\E_s \\left[\\int_s^t \\rho_u\\d   u\\right]\\; .$$\nThe process $\\rho$ is called the correlation process of the two Brownian motions. \\index{correlation coefficient} The correlation of the changes $B_{1t}-B_{1s}$ and $B_{2t}-B_{2s}$, given information at date $s$, is\n$$\\frac{\\text{covariance}}{\\text{product of standard deviations}}  = \\frac{\\E_s\\int_s^t \\rho_u \\d   u}{\\sqrt{t-s} \\sqrt{t-s}} = \\frac{1}{t-s}\\E_s\\int_s^t \\rho_u \\d   u\\; .$$\nThus, the correlation is the expected average value of $\\rho_u$.  In particular, when $\\rho$ is constant, the correlation of the changes is $\\rho$.\n\nThe two Brownian motions are independent if $\\rho=0$.  In this case, knowledge of one Brownian motion -- even knowledge of its future values -- will not help to predict the other.\n\nJust as we computed quadratic variation by taking a limit of sums of squared changes, we compute what is called joint variation by taking a limit of sums of products of changes.  For the two Brownian motions, the joint variation over an interval $[0, t]$ is\n$$\\lim_{n \\rightarrow \\infty} \\sum_{i=1}^n \\Delta B_{1t_i} \\times \\Delta B_{2t_i} $$\ngiven increasingly fine partitions $0=t_0 < \\cdots < t_n=t$ as before. \nThe joint variation of two Brownian motions equals the integral of their correlation process; that is, the joint variation over $[0, t]$ equals $\\int_0^t \\rho_s\\d s$, with probability one.  Thus, the expected joint variation equals the covariance. \n\n## {.unnumbered}\n\n\n::: Exercise\n Consider a discrete partition $0=t_0 < t_1 < \\cdots t_n=t$ of the time interval $[0,t]$ with $t_i - t_{i-1} = \\Delta t = t/n$ for each $i$.  Consider the function \n$$X_t=\\mathrm{e}^t\\; .$$\nWrite a function that computes and plots $\\sum_{i=1}^n (\\Delta X_{t_i})^2$, where \n$$\\Delta X_{t_i} = X_{t_i}-X_{t_{i-1}} = \\mathrm{e}^{t_i} - \\mathrm{e}^{t_{i-1}}\\; .$$\n:::\n::: Exercise\n Repeat the previous problem for the function $X_t = t^3$.  In both this and the previous problem, can you tell what happens to $\\sum_{i=1}^n (\\Delta X_{t_i})^2$ as $n \\rightarrow \\infty$?\n:::\n::: Exercise\n Write a function to compute $\\sum_{i=1}^n (\\Delta B_{t_i})^2$ from a partition of an interval $[0, t]$, for given $t$ and $n$, where $B$ is a simulated Brownian motion.  For a given $t$, what happens to the sum as $n \\rightarrow \\infty$?  \n:::\n::: Exercise\n Repeat the previous problem to compute $\\sum_{i=1}^n (\\Delta B_{t_i})^3$, where $B$ is a simulated Brownian motion.  For a given $t$, what happens to the sum as $n \\rightarrow \\infty$?  \n:::\n::: Exercise\n Repeat the previous problem, computing instead $\\sum_{i=1}^n |\\Delta B_{t_i}|$ where $| \\cdot |$ denotes the absolute value.  What happens to this sum as $n \\rightarrow \\infty$?\n:::\n\n",
    "supporting": [
      "Chapter_Brownian_files\\figure-pdf"
    ],
    "filters": []
  }
}