# Introduction to Options {#sec-c_calls-puts}

<a target="_blank" href="https://colab.research.google.com/github/math-finance-book/notebooks/blob/main/chapter1.ipynb">
  <img src="images/Open in Colab.png" alt="Open Chapter Code In Colab" width="200" height="34"/>
</a>  

Financial options are rights to buy and sell assets at pre-specified prices.  The rights are traded on exchanges and also as private contracts (called over-the-counter or OTC).  A call option is a right to buy an asset.  A put option is a right to sell an asset.  The pre-specified price is called the exercise price, the strike price, or simply the strike.   The asset to which an option pertains is called the underlying asset, or, more briefly, the underlying.  

Here is a snapshot of market statistics regarding call options on Apple stock (AAPL) traded on the Chicago Board Options Exchange (CBOE).  We are accessing the data courtesy of Yahoo Finance.  We will refer to this data throughout the chapter.

```{python}
#| execute: auto

import pandas as pd
import yfinance as yf
from datetime import datetime
import pytz
from datetime import datetime

est = pytz.timezone('US/Eastern')
fmt = '%Y-%m-%d %H:%M:%S %Z%z'
now = datetime.today().astimezone(est).strftime(fmt)

ticker = "AAPL"         # ticker to pull
kind = "call"           # call or put
maturity = 4            # option maturity in order of maturities trading

tick = yf.Ticker(ticker.upper())

# Pull last stock price
close = tick.history().iloc[-1].Close

# Get maturity date
date = tick.options[maturity]

# Pull options data
df = (
    tick.option_chain(date).calls
    if kind == "call"
    else tick.option_chain(date).puts
)

df.lastTradeDate = df.lastTradeDate.map(
    lambda x: x.astimezone(est).strftime(fmt)
)

# Formatting
cols = [
    "strike",
    "bid",
    "ask",
    "lastPrice",
    "change",
    "percentChange",
    "lastTradeDate",
    "volume",
    "openInterest",
    "impliedVolatility",
]
df = df[cols]
df["impliedVolatility"] = df["impliedVolatility"].map("{:.1%}".format)
df["change"] = df["change"].round(2)
df["percentChange"] = (df["percentChange"]/100).map("{:.1%}".format)
df.columns = [
    "Strike",
    "Bid",
    "Ask",
    "Last Price",
    "Change",
    "% Change",
    "Time of Last Trade",
    "Volume",
    "Open Interest",
    "Implied Volatility",
] 
df = df.set_index("Strike")
print(f"Code was executed at \t{now}")
print(f"Last {ticker.upper()} price was \t${close:.2f}.")
print(f'Maturity date of options:\t{date}')
pd.set_option('display.max_rows', 500)
pd.set_option('display.max_columns', 500)
pd.set_option('display.width', 1000)
print(df)
```


![](images/under_construction.png){fig-align="center"}

:::{#fig-option_portfolios}

<iframe width="780" height="400" src="https://derivatives-book-26ac36570fb8.herokuapp.com/chapter1/option_portfolios"></iframe>

The value at maturity of a portfolio of options is plotted, assuming all of the options have
the same maturity.  Enter positive quantities for long positions in options and negative quantities for
short positions.  Long or short positions in the underlying asset can also be included. Also, long or 
short cash positions can be included: cash means a position in a risk-free asset sufficient to deliver
the specified amount of cash at the option maturity, for example, a long or short position in a zero-coupon
bond that matures at the option maturity.
:::


::: {#fig-miracle-npv} 
<iframe width="780" height="400" src="https://derivatives-book-26ac36570fb8.herokuapp.com/chapter1/npv"></iframe>

The net present value is the sum of the present values of the cash flows, and the present value of each cash flow is the cash flow multiplied by the present value factor.  The light blue cells are editable.
:::

::: {#fig-miracle-amortization} 
<iframe width="780" height="700" src="https://derivatives-book-26ac36570fb8.herokuapp.com/chapter1/amortization_schedules"></iframe>

A loan payment is calculated for the parameters set by the sliders for either monthly or annual payments.  The figure on the left shows the division of each payment between principal and interest.  The figure on the right is the amortization schedule, showing the remaining balance on the loan just before each payment.
:::

::: {#fig-miracle-retirement} 
<iframe width="780" height="700" src="https://derivatives-book-26ac36570fb8.herokuapp.com/chapter1/retirement_planning"></iframe>

The figure tracks a retirement account balance in which deposits (savings) are made at the end of each month for a specified number of years.  Withdrawals are then made at the beginning of each month for a specified number of years.  All inputs should be specified in real terms (in today's dollars).  The monthly deposit growth rate is $g = (1+g_a)^{1/12}-1$, where $g_a$ is the annual savings growth rate specified by the slider.  The calculations are explained in more detail in.
:::

::: {#fig-miracle-retirement-sim} 
<iframe width="780" height="1000" src="https://derivatives-book-26ac36570fb8.herokuapp.com/chapter1/retirement_planning_sim"></iframe>

A retirement account is tracked assuming monthly deposits and withdrawals as in , except that the monthly returns are randomly generated from a normal distribution. The monthly mean return is taken to be the annual mean divided by 12, and the monthly standard deviation is taken to be the annual standard deviation divided by the square root of 12, where the annual mean and standard deviation are specified by the sliders. 5,000 possible lifetimes are simulated, and the distribution of the 5,000 ending balances is described in the table. The figure on the left in the second row is a box plot of the ending balances, and the figure on the right displays the percentiles of the ending balance distribution, supplementing the information in the table.
:::


::: {#fig-miracle-irr} 
<iframe width="780" height="1000" src="https://derivatives-book-26ac36570fb8.herokuapp.com/chapter1/irr"></iframe>

The table on the right illustrates the NPV calculation as in @fig-miracle-npv, using the internal rate of return as the discount rate.  In this case, the NPV is zero.  The figure plots the NPV as a function of the discount rate.  The IRR is the rate at which the NPV curve crosses zero.  The light blue cells are editable.
:::


## Intrinsic Value and Time Value


## Investing in Options


## Hedging with Options


## Selling Options for Income


## Option Spreads


## Put-Call Parity


## American Options


## Dividends

