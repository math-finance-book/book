{{< include macros.qmd >}}

# Fixed-Income Derivatives {#sec-c:fixedincomederivatives} 

```{python}
#| eval: true
#| echo: false

import plotly
from IPython.display import display, HTML

plotly.offline.init_notebook_mode(connected=True)
display(
    HTML(
        '<script type="text/javascript" async src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_SVG"></script>'
    )
)
```


In this chapter, we will introduce some fundamental fixed-income derivatives (caps, floors and swaptions) and explain the market model approach to valuation.  We will also explain the relation between caps, floors and swaptions on the one hand and discount and coupon bond options on the other.  This leads to other approaches for valuing caps, floors and swaptions, which will be developed in the following chapters.  

## Caps and Floors

Caps \index{cap} and floors \index{floor} have a structure very similar to that of swaps, as described in @sec-s:swaps.  At each reset date $t_i$, the simple interest rate $\mathcal{R}_i$ for period $\Delta t$ is observed.  This rate determines a payment at the following date $t_{i+1}$.  As discussed in the preceding chapter, the cash flow to the payer in a swap is $(\mathcal{R}_i - \bar{\mathcal{R}})\,\Delta t$ and the cash flow to the receiver is $(\bar{\mathcal{R}}-\mathcal{R}_i)\,\Delta t$, for each \$1 of notional principal.  A swap is really a series of forward contracts, in which both parties have obligations.  On the other hand, caps and floors are series of options.  A premium is paid up-front by the buyer of a cap or floor to the seller and all future cash flows are paid by the seller to the buyer.  The owner of a cap with cap rate $\bar{\mathcal{R}}$ receives $\max(0,\mathcal{R}_i-\bar{\mathcal{R}})\Delta t$ at date $t_{i+1}$ for each \$1 of notional principal, and the owner of a floor receives $\max(0,\bar{\mathcal{R}}-\mathcal{R}_i)\Delta t$ at date $t_{i+1}$ for each \$1 of notional principal.  


Caps and floors are used in conjunction with hedging floating rate obligations or for speculative purposes.  Portfolios of caps and floors have properties analogous to option portfolios.  For example, the combination of a long cap and a short floor at the same rate $\bar{\mathcal{R}}$ creates the payer side of a swap, in the same way that a long call and short put create a synthetic long forward (and a short cap and a long floor at the same rate $\bar{\mathcal{R}}$ creates the receiver side of a swap just as a short call and long put create a synthetic short forward contract).  A long cap at rate $\bar{\mathcal{R}}_c$ and a short floor at rate $\bar{\mathcal{R}}_f < \bar{\mathcal{R}}_c$ creates a collar \index{collar} (for an underlying floating rate obligation), etc.

The individual payments on a cap are called caplets, \index{caplet} and a cap is simply a portfolio of caplets.    Similarly, the individual payments on a floor are called floorlets, \index{floorlet} and the values of caplets and floorlets are linked by put-call parity, as we will see below.  

A caplet can be viewed as a call option on the spot rate with strike equal to the fixed rate.  Thus, it is a bet on higher interest rates.  Because interest rates and bond prices are inversely related, it can also be viewed as a bet on lower bond prices.  In this regard, it is similar to a put option on bond prices.  In fact, we will see in  @sec-s:caps2 that a caplet is exactly equivalent to a put option on a discount bond.  Likewise, a floorlet can be viewed either as a put option on the spot rate or a call option on a discount bond.

## Forward Rates {#sec-s:forwardrates}

Suppose we wish to borrow money at date $u$ for a period of $\Delta t$ years, and we want to lock in the rate on the loan at date $t<u$.  To do this, we can buy the discount bond maturing at $u$ and finance the purchase by shorting $P(t,u)/P(t,u+\Delta t)$ units of the bond maturing at $u+\Delta t$.  This generates a cash flow of \$1 at date $u$ and $-P(t,u)/P(t,u+\Delta t)$ dollars at date $u+\Delta t$.  This implies a simple interest rate of $\mathcal{R}$ defined as 
$$
\frac{P(t,u)}{P(t,u+\Delta t)} = 1+\mathcal{R}\,\Delta t\;.
$$ {#eq-forward1}

This rate is called a forward rate. \index{forward rate}

Forward rates will be important for loans at the reset dates maturing at the subsequent payment dates.  We will denote the forward rate at date $t \leq t_i$ for a loan between $t_i$ and $t_{i+1}$ as $\mathcal{R}_i_t$.  This rate is defined in accord with @eq-forward1, substituting the date $t_i$ for date $u$; i.e.,
$$
\frac{P(t,t_i)}{P(t,t_{i+1})}=1+\mathcal{R}_i_t\,\Delta t\;.
$$ {#eq-forward2}

Note that when $t=t_i$, $P(t,t_i)=1$, so $\mathcal{R}_i_{t_i}=\mathcal{R}_i$ defined in @eq-spot2---i.e., the forward rate equals the spot rate at $t_i$.

## Portfolios that Pay Spot Rates {#sec-s:portfoliosspotrates}

One way to value caps and floors is to view them as portfolios of options on rates, as we will see later.  In order to apply the option pricing formulas derived earlier, we need to know that each rate is the value of some asset, so the option can be viewed as an option on an asset.  This is very straightforward.

To obtain the spot rate $\mathcal{R}_i$ at date $t_{i+1}$, one needs \$1 to invest at date $t_i$.  This can be arranged at date $t<t_i$ by buying one unit of the bond maturing at $t_i$.  Investing the dollar paid by the bond at the spot rate at $t_i$ will generate $1+\mathcal{R}_i\,\Delta t$ dollars at date $t_{i+1}$.  The extra dollar can be eliminated by being short one unit of the bond maturing at $t_{i+1}$, leaving $\mathcal{R}_i\,\Delta t$ dollars.  Thus, the portfolio that pays the spot rate multiplied by the period length $\Delta t$ consists of being long one unit of the bond maturing at $t_i$ and short one unit of the bond maturing at $t_{i+1}$.  
This implies that the value at date $t<t_i$ of receiving $\mathcal{R}_i\,\Delta t$ dollars at date $t_{i+1}$ is $P(t,t_i)-P(t,t_{i+1})$.  

At date $t_i$ the spot rate $\mathcal{R}_i$ becomes known.  Between $t_i$ and $t_{i+1}$, the value of receiving $\mathcal{R}_i\,\Delta t$ dollars at date $t_{i+1}$ is the present value of this known cash flow, which is $\mathcal{R}_i\,\Delta t\,P(t, t_{i+1})$.  To summarize, the value of receiving $\mathcal{R}_i\,\Delta t$ dollars at date $t_{i+1}$ is
$$
S_i_t = \begin{cases} P(t,t_i)-P(t,t_{i+1}) & \text{if } t < t_{i}\; ,\\
\mathcal{R}_i\,\Delta t\, P(t,t_{i+1}) & \text{if }  t_{i} \leq t \leq t_{i+1}\;. \end{cases}
$$ {#eq-S_i}

 
Actually, we will view a caplet as an option on a forward contract and apply Black's formula.  To do this, we need to know the forward price of the asset with price $S_i_t$ for a contract maturing at $t_{i+1}$.  We denote this forward price by $F_i_t$.  The synthetic forward argument presented in @sec-s:merton shows that for any dividend-reinvested asset with price $S$, the forward price for a contract maturing at $T$ is $S_t/P(t,T)$.  So, $F_i$ is given by

$$
F_i_t = \begin{cases} \frac{P(t,t_i)}{P(t,t_{i+1})}-1 & \text{if } t < t_{i}\; ,\\
\mathcal{R}_i\,\varDelta t & \text{if }  t_{i} \leq t \leq t_{i+1}\;. \end{cases}
$$

$$
= \begin{cases}\mathcal{R}_i_t\,\Delta t & \text{if } t < t_{i}\; ,\\
\mathcal{R}_i\,\Delta t & \text{if }  t_{i} \leq t \leq t_{i+1}\;, \end{cases}
$$ {#eq-F_i}

where $\mathcal{R}_i_t$ is the forward rate defined in @eq-forward2.  Thus, the asset with price $S_i_t$ pays the spot rate at date $t_i$ times the period length at date $t_{i+1}$, and the forward price of this asset is the forward rate times the period length.



## The Market Model for Caps and Floors {#sec-s:valuingcaps}

The valuation we will describe here is standard market practice for valuing caps and floors or at least for quoting the prices of caps and floors.  Specifically, it is standard to quote prices in terms of implied volatilities, where the volatility is to be input into Black's formula for options on forwards.  This model is sometimes called the market model. \index{market model}

We can apply Black's formula to the forward contract with price $F_i$ described in the previous section.  We view the caplet \index{caplet} as a call option maturing at $t_i$ on this forward contract that matures at $t_{i+1}$.  As explained in Chapter~\ref{c_forwardexchange}, the value at the maturity date $T$ of a call option with strike $K$ on a forward contract with price $F$ maturing at $T' \geq T$ is $\max(0,F_T-K)P(T,T')$.  Therefore, the value at maturity of a call option maturing at $t_i$ with strike $\bar{\mathcal{R}}\,\Delta t$ on the forward contract with price $F_i$ is
$$\max(0,F_i_{t_i}-\bar{\mathcal{R}}\,\Delta t)P(t_i,t_{i+1})\; .$$
Since $F_i_{t_i}=\mathcal{R}_i\,\Delta t$, this equals 
$$
\max(0,\mathcal{R}_i-\bar{\mathcal{R}})\,\Delta t\,P(t_i,t_{i+1})\;.
$$ {#eq-capletvalue}

This is also the value of the caplet at date $t_i$.

It follows that the value of the caplet at any date $t\leq t_i$ is the value of the call option on the forward contract.  To apply Black's formula, \index{Black's formula}we need the forward price to have a constant (or at least non-randomly varying) volatility.  As noted earlier, at dates $t\leq t_i$, $F_i_t=\mathcal{R}_i_t\,\Delta t$, where $\mathcal{R}_i_t$ is the forward rate, so the volatility of the forward price is the volatility of the forward rate. Black's formula yields:


::: Rule
## 
Assuming the forward rate $\mathcal{R}_i_t$ has a constant volatility $\sigma$, the value at date $0<t_i$ of a caplet with reset date $t_i$ and payment date $t_{i+1}$ is

$$
P(0,t_{i+1})\mathcal{R}_i_0\,\Delta t\,N(d_1) - P(0,t_{i+1})\bar{\mathcal{R}}\,\Delta t\,N(d_2)\;,
$$ {#eq-blackcaplet100}

and the value at date $0<t_i$ of a floorlet \index{floorlet} with reset date $t_i$ and payment date $t_{i+1}$ is
$$
P(0,t_{i+1})\bar{\mathcal{R}}\,\Delta t\,N(-d_2)- P(0,t_{i+1})\mathcal{R}_i_0\,\Delta t\,N(-d_1)\;,
$$ {#eq-blackfloorlet100}

where

$$
d_1 = \frac{\log \left(\mathcal{R}_i_0/\bar{\mathcal{R}}\right)+\frac{1}{2}\sigma^2 t_i}{\sigma\sqrt{t_i}}\; ,
$$
$$
d_2 = d_1 - \sigma\sqrt{t_i}\;.
$$


:::


The put-call parity relationship for caplets and floorlets can be seen as follows. \index{put-call parity} If we add $\bar{\mathcal{R}}\Delta t$ to the caplet payment, we obtain
$$\bar{\mathcal{R}}\,\Delta t +  \max(0,\mathcal{R}_i-\bar{\mathcal{R}})\,\Delta t = \max( \bar{\mathcal{R}}, \mathcal{R}_i)\,\Delta t\; .$$
On the other hand, if we add $\mathcal{R}_i\,\Delta t$ to the floorlet payment, we obtain the same thing:
$$\mathcal{R}_i\,\Delta t + \max(0,\bar{\mathcal{R}}-\mathcal{R}_i)\,\Delta t = \max( \mathcal{R}_i,\bar{\mathcal{R}} )\,\Delta t\; .$$
Hence, the value of a caplet plus the value of receiving $\bar{\mathcal{R}}\,\Delta t$ at date $t_{i+1}$ must equal the value of a floorlet plus the value of receiving $\mathcal{R}_i\,\Delta t$ at date $t_{i+1}$.  The value at any date $t\leq t_i$ of receiving $\bar{\mathcal{R}}\,\Delta t$ at date $t_{i+1}$ is the value of $\bar{\mathcal{R}}\,\Delta t$ discount bonds maturing at date $t_{i+1}$, which we are denoting by
$\bar{\mathcal{R}}\,\Delta t P(t,t_{i+1})$.  The value at at any date $t\leq t_i$ of obtaining $\mathcal{R}_i\,\Delta t$ dollars at date $t_{i+1}$ is  
$S_i_t =P(t,t_i)-P(t,t_{i+1})$.  We conclude that
$$\text{ Value of Caplet} \;+ \;\bar{\mathcal{R}}\,\Delta t P(t,t_{i+1}) = \text{Value of Floorlet} \;+\; P(t,t_i)-P(t,t_{i+1})\; .$$

We will compute the value of each caplet with the Black_Call function.
In the Black_Call function, we input the forward price for the caplet with reset date $t_i$ as
$$
F_i_0 = \mathcal{R}_i_0\,\Delta t = \frac{P(0,t_i)}{P(0,t_{i+1})} - 1\;,
$$ {#eq-capletforwardprice}

as given in @eq-forward2 and @eq-F_i.  The exercise price of each caplet is $K=\bar{\mathcal{R}}\,\Delta t$.  We also need to input the discounting factor $P(0,t_{i+1})$.
The discount bond prices $P(0,t_1)$, \ldots, $P(0, t_N)$ are input as a vector `P`.  The discount bond price $P(0,t_0)$ is input as `P0`.  We will assume the same volatility for each forward rate.


```{python}

#| code-fold: true
#| label: Market_Model_Cap



import numpy as np
from scipy.stats import norm

def black_call(F, K, P, sigma, T):
    d1 = (np.log(F / K) + 0.5 * sigma ** 2 * T) / (sigma * np.sqrt(T))
    d2 = d1 - sigma * np.sqrt(T)
    return P * (F * norm.cdf(d1) - K * norm.cdf(d2))

def market_model_cap(P0, P, rbar, sigma, N, t0, dt):
    K = rbar * dt
    if t0 == 0:
        return P[0] * max(0, 1 / P[0] - 1 - rbar * dt)
    else:
        F = P0 / P[0] - 1
        cap_value = black_call(F, K, P[0], sigma, t0)
    
    for i in range(1, N):
        F = P[i - 1] / P[i] - 1
        cap_value += black_call(F, K, P[i], sigma, t0 + i * dt)
    
    return cap_value

# Example usage
P0 = 0.95
P = [0.92, 0.89, 0.85, 0.80]
rbar = 0.03
sigma = 0.2
N = 4
t0 = 0.5
dt = 0.5
T = 2

print("Market Model Cap:", market_model_cap(P0, P, rbar, sigma, N, t0, dt))

```

## The Market Model for European Swaptions {#sec-s:swaptions}

The owner of a European swaption \index{swaption} has an option to enter into a swap at the maturity date of the swaption.  A payer swaption \index{payer swaption} gives the owner of the option the right to enter into a swap as a fixed-rate payer, for a given swap rate (not necessarily a rate that makes the swap have zero value at any date).  The owner of a receiver swaption \index{receiver swaption} has the right to enter into the swap as a fixed-rate receiver.  The values of payer swaptions and receiver swaptions are linked by put-call parity.  

A payer swaption has similarities to a cap.  The owner of a cap has the right to receive the floating rate and pay the fixed rate and will do so in each period in which the floating rate is higher.  Similarly, the owner of a payer swaption has the right to receive floating and pay fixed.  However, the owner of a cap chooses each period whether to exercise his option, whereas the owner of a swaption makes a once-and-for-all decision whether to exercise, at the maturity of the swaption.  A cap is therefore a portfolio of options, whereas a swaption is an option on a portfolio.  In general of course, other things being equal, a portfolio of options is worth more than an option on a portfolio. 

Consider a payer swaption with maturity date $T$ and swap rate $\bar{\mathcal{R}}$, where the underlying swap has payment dates $t_1,\ldots,t_N$ with the first reset date of the swap being $t_0 = t_1-\Delta t \geq T$.  We assume the notional principal of the swap is \$1.  Expression @eq-swapvalue100 in @sec-s:swaps gives the value at date $T$ to the payer in the swap as
$$S_T-Z_T\; ,$$
where we define

$$
S_t=P(t,t_0)- P(t,t_N)\; ,
$$
$$
Z_t =  \bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(t,t_i)\;.
$$ {#eq-fixedrateside}


As explained in @sec-s:swaps, $S_t$ is the value of the floating-rate payments in the swap and $Z_t$ is the value of the fixed-rate payments.  The value of a payer swaption at its maturity $T$ is therefore
$$\max(0,S_T-Z_T)\; .$$
We can value the swaption using Margrabe's formula \index{Margrabe's formula}for exchange options \index{exchange option} provided the ratio of prices $S/Z$ has a constant (or non-randomly varying) volatility.  The volatility of the ratio is the same as the volatility of the forward swap rate.  To see this, recall that 
in @sec-s:swaps the forward swap rate $\mathcal{R}_t$ was defined to be the rate such that 
$$P(t,t_0)- P(t,t_N) = \mathcal{R}_t\,\Delta t \sum_{i=1}^N P(t,t_i)\; ,$$
which means that the swap would have zero value if initiated at date $t$ at the rate $\mathcal{R}_t$---cf.\ equation~@eq-swaprate1.  Thus,
\begin{equation*}
\frac{S_t}{Z_t} = \frac{P(t,t_0)- P(t,t_N)}{\bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(t,t_i)} = \frac{\mathcal{R}_t\,\Delta t \sum_{i=1}^N P(t,t_i)}{\bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(t,t_i)} = \frac{\mathcal{R}_t}{\bar{\mathcal{R}}}\;,
\end{equation*}
where $\mathcal{R}_t$ is the forward swap rate.  
Margrabe's formula implies:^[To improve the clarity of the typesetting, we have written  $\log(S)-\log(Z)$ in   @eq-margrabepayerswaption100d1 instead of our customary $\log(S/Z)$.]


::: Rule
## 
Assuming the forward swap rate $\mathcal{R}_t$ has a constant volatility $\sigma$, the date--0 value of a European payer swaption is

$$
\big[P(0,t_0)-P(0,t_N)\big]N(d_1) - \left[\bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(0,t_i)\right]N(d_2)\;,
$$ {#eq-margrabepayerswaption100}

and the date--0 value of a European receiver swaption is
$$
\left[\bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(0,t_i)\right]N(-d_2) - \big[P(0,t_0)-P(0,t_N)\big]N(-d_1)\;,
$$ {#eq-margrabereceiverswaption100}

where

$$
d_1 = \frac{\log\big(P(0,t_0)-P(0,t_N)\big) - \log\left(\bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(0,t_i)\right) + \frac{1}{2}\sigma^2T}{\sigma\sqrt{T}}\;,
$$ {#eq-margrabepayerswaption100d1}

$$
d_2 = d_1-\sigma\sqrt{T}.
$$


:::


Put-call parity \index{put-call parity} for swaptions is as follows: fixed-rate cash flows plus the option to exchange for floating is equivalent to floating-rate cash flows plus the option to exchange for fixed.  In each side of this equivalence, one obtains, at the option maturity, the larger of the values of the fixed and floating-rate legs.  More formally,
\begin{multline*} \bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(T,t_i) + \max\left(0, \,P(T,t_0)- P(T,t_N)-  \bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(T,t_i)\right) \\= P(T,t_0)- P(T,t_N) + \max\left(0,\,  \bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(T,t_i)-P(T,t_0)+ P(T,t_N)\right).
\end{multline*}
Therefore, at any date $t \leq T$,


\begin{multline}
\bar{\mathcal{R}}\,\Delta t \sum_{i=1}^N P(t,t_i)\; + \;\text{Value of Payer Swaption}\\ = 
P(t,t_0)- P(t,t_N) \;+ \;\text{Value of Receiver Swaption}.
\end{multline}
 {#eq-swaptionparity}

The following code uses the Margrabe formula to price a European swaption.

```{python}

#| code-fold: true
#| label: Payer_Swaption


def margrabe(S1, S2, sigma, q1, q2, T):
    sigma2 = sigma ** 2 * T
    d1 = (np.log(S1 / S2) + 0.5 * sigma2) / np.sqrt(sigma2)
    d2 = d1 - np.sqrt(sigma2)
    return S1 * norm.cdf(d1) - S2 * norm.cdf(d2)

def market_model_payer_swaption(P0, P, rbar, sigma, N, T, dt):
    floating_leg_value = P0 - P[N - 1]
    fixed_leg_value = P[0]
    for i in range(1, N):
        fixed_leg_value += P[i]
    fixed_leg_value *= rbar * dt
    
    return margrabe(floating_leg_value, fixed_leg_value, sigma, 0, 0, T)


# Example usage
P0 = 0.95
P = [0.92, 0.89, 0.85, 0.80]
rbar = 0.03
sigma = 0.2
N = 4
t0 = 0.5
dt = 0.5
T = 2

print("Market Model Payer Swaption:", market_model_payer_swaption(P0, P, rbar, sigma, N, T, dt))
```

## A Comment on Consistency {#sec-s:consistency}
It is well known that it is inconsistent to assume both that the forward rates $\mathcal{R}_i_t$ and 
the forward swap rate $\mathcal{R}_t$ have constant volatilities.  We can obtain some intuition for this as follows.  Recall that
$$\mathcal{R}_i_t\,\Delta t = \frac{P(t,t_i)-P(t,t_{i+1})}{P(t,t_{i+1})}\; ,$$
and
$$\mathcal{R}_t\,\Delta t = \frac{P(t,t_0)-P(t,t_N)}{\sum_{i=0}^{N-1} P(t,t_{i+1})}\; .$$
The numerator in the last equation is the sum (over $i=0,\dots,N\!-\!1$) of the numerators in the previous equation; hence, it is the sum of the $\mathcal{R}_i_t\,\Delta t\,P(t,t_{i+1})$.  This implies that
$$\mathcal{R}_t = \frac{\sum_{i=0}^{N-1} P(t,t_{i+1})\mathcal{R}_i_t}{\sum_{i=1}^{N-1}P(t,t_{i+1})}\; ,$$
which we can write as
$$\mathcal{R}_t = \sum_{i=0}^{N-1} w_i_t \mathcal{R}_i_t\; ,$$
where the weights $w_i_t$ are defined as
$$w_i_t = \frac{P(t,t_{i+1})}{\sum_{i=0}^{N-1}P(t,t_{i+1})}\; .$$
Therefore, the forward swap rate is a weighted average of the forward rates.  A sum (or average) of lognormal variables is not lognormal, so if the forward rate has a constant volatility, then the forward swap rate will not (and vice versa), absent very peculiar assumptions about the weights $w_i_t$.
This means that one should not really simultaneously use Black's formula for valuing caps (or floors) and Margrabe's formula for valuing swaptions (though there is evidence that the error introduced by doing so may be small).  In the following chapters, we will consider other models that do not suffer from this type of inconsistency.

## Caplets as Puts on Discount Bonds {#sec-s:caps2}
Previously, we considered a caplet \index{caplet} as a call option on the forward rate and thus a bet on higher interest rates.  This is equivalent to a bet on lower bond prices, and we will now show that a caplet with payment date $t_{i+1}$ is equivalent to $1+\bar{\mathcal{R}}\,\Delta t$ put options on the $t_{i+1}$--maturity discount bond.  The put options mature at the reset date $t_i$ of the caplet and have strike equal to $1/(1+ \bar{\mathcal{R}}\,\Delta t)$.  To see this equivalence, note that the value of $1+\bar{\mathcal{R}}\,\Delta t$ such options at their maturity date $t_i$~is
\begin{multline*}
\big[1+\bar{\mathcal{R}}\,\Delta t\big] \max\left(0,\frac{1}{1+ \bar{\mathcal{R}}\,\Delta t}-P(t_i,t_{i+1})\right) \\ \begin{array}{l}
= \max\big(0,\,1-\big[1+\bar{\mathcal{R}}\,\Delta t\big]P(t_i,t_{i+1})\big)\\
=P(t_i,t_{i+1})\max\left(0,\frac{1}{P(t_i,t_{i+1})}-1-\bar{\mathcal{R}}\,\Delta t\right)\;. \end{array}
\end{multline*}
Given that $1/P(t_i,t_{i+1}) = 1+\mathcal{R}_i\,\Delta t$, this equals
$$P(t_i,t_{i+1}) \max(0,\mathcal{R}_i-\bar{\mathcal{R}})\,\Delta t\; .$$
This is the value  at date $t_i$ of the caplet with payment date $t_{i+1}$ shown in expression @eq-capletvalue.  It follows that the  caplet and the $1+\bar{\mathcal{R}}\,\Delta t$ put options must have the same value at any date prior to $t_i$.

Similarly, a floorlet \index{floorlet} with payment date $t_{i+1}$ is equivalent to $1+\bar{\mathcal{R}}\,\Delta t$ call options on the $t_{i+1}$--maturity discount bond, with the call options maturing at date $t_i$ and having strike equal to $1/(1+ \bar{\mathcal{R}}\,\Delta t)$.  
In the following chapters, we will describe models for valuing bond options.  These models will also be applied to price caps, as portfolios of put options on discount bonds, and to price floors, as portfolios of calls.  \index{discount bond option}

## Swaptions as Options on Coupon Bonds {#sec-s:swaptionscouponbondoptions}

As noted previously, the value at date $T$ of the payer swaption, if exercised, is
$$P(T,t_0)-P(T,t_N) - \bar{\mathcal{R}}\,\Delta t\sum_{i=1}^N P(T,t_i)\; .$$
In @sec-s:swaptions, we considered this as the difference of two pieces, the first piece being $S_T = P(T,t_0)-P(T,t_N)$, which is the value of the floating-rate leg, and the second being 
$Z_T = \bar{\mathcal{R}}\,\Delta t\sum_{i=1}^N P(T,t_i)$, the value of the fixed-rate leg.  We can also separate it differently---the first part being $P(T,t_0)$, which is the value at the swaption maturity of the discount bond maturing at $t_0$, and the second part being    $P(T,t_N)+\bar{\mathcal{R}}\,\Delta t\sum_{i=1}^N P(T,t_i)$, which is the value of a fixed-rate bond including the face value at maturity.  Thus, a payer swaption is equivalent to an option to exchange a fixed-rate coupon bond for a discount bond.  A receiver  swaption is an option to engage in the reverse exchange. \index{coupon bond option}

Typically, $t_0=T$ (the swap starts at the swaption maturity), in which case $P(T,t_0)=1$ and the payer (receiver) swaption is a standard put (call) option on the coupon bond, with exercise price equal to 1.  The models developed in later chapters for valuing options on coupon bonds can therefore also be applied to value swaptions. 



## {.unnumbered}


::: {#exr-exercise121}
  Modify the function `MarketModel_Cap` so that rather than taking `P0` and the vector `P` of discount bond prices as inputs, it looks up discount bond prices from a function `DiscountBondPrice` that returns a discount bond price for any maturity.  For example, `DiscountBondPrice` might be based on a cubic spline fit to the yield curve as discussed in @sec-s:yieldcurve.  To test the new function `MarketModel_Cap`, you will need to create a test function `DiscountBondPrice`.  For example, you could use the following, which corresponds to a rather steeply increasing yield curve, especially at the short end.
\addcontentsline{lof}{figure}{DiscountBondPrice}
\begin{verbatim}
Function DiscountBondPrice_t
DiscountBondPrice = Exp(-t * (0.01 + 0.0052 * t - 0.00012 * t ^ 2))
End Function
\end{verbatim}
:::
::: Exercise
 Create a function `MarketModel_Cap_ImpliedVol` that uses bisection to find the forward rate volatility (assume the same volatility for each forward rate) that equates the cap price given by `MarketModel_Cap` to a market cap price.  The function should take the same inputs as `MarketModel_Cap` except that the forward rate volatility should be replaced by the market cap price.
:::
::: Exercise
 Repeat @exr-exercise121 for the function `MarketModel_Payer_Swaption`.
:::
::: Exercise
 Create a function `MarketModel_Payer_Swaption_ImpliedVol` that uses bisection to find the forward swap rate volatility that equates the swaption price given by `MarketModel_Payer_Swaption` to a market swaption price.  The function should take the same inputs as `MarketModel_Payer_Swaption` except that the forward swap rate volatility should be replaced by the market swaption price.
:::
::: Exercise
 Create a Python function `MarketModel_Floor` to value a floor, assuming the forward rates have constant and equal volatilities.  Write the function so that it looks up discount bond prices from the `DiscountBondPrice` function. 
:::
::: Exercise
 Create a Python function `MarketModel_Receiver_Swaption` to value a receiver swaption, assuming the forward swap rate has a constant volatility.  Write the function so that it looks up discount bond prices from the `DiscountBondPrice` function.
:::
::: {#exr-e_eicchorn}
  The following exercise is motivated by an example presented in one of my classes by David Eichhorn of NISA Investment Advisors.


1. Using the `DiscountBondPrice` function above, calculate what the swap rate should be today for a 10-year swap with semiannual cash flows.
2. Calculate the value of a $ 3 \times 10$ European receiver swaption (an option maturing in 3 years to enter into a 10-year swap as the receiver) with the underlying swap having semiannual cash flows and the fixed rate being equal to the spot swap rate calculated in part (a).  Assume the forward swap rate has a constant volatility equal to 0.1.
3. Consider a $ 3 \times 10$ European payer swaption  with the underlying swap having semiannual cash flows.  Calculate the fixed rate of the swap that makes the payer swaption have the same value as the receiver swaption calculated in part (b).  Assume the forward swap rate has a constant volatility equal to 0.1.
4. 
Calculate the forward swap rate for a 10-year swap with semiannual cash flows beginning in 3 years.


**Commentary**

\next 
A collar is an alternative to a forward contract.  With standard options, as mentioned in @sec-s:fundamentalconcepts, a collar consists of a long call and short put (or the reverse).  If the strike of each equals the forward price, then the collar is equivalent to a  forward and will have zero cost---by put-call parity, \index{put-call parity} both options have the same price, so the purchase of the call can be financed by selling the put.  One can also construct a zero-cost collar\index{collar}\index{zero-cost collar} with the call and put having different strikes.

A swaption collar \index{collar swaption} is an alternative to a forward swap contract.  \index{forward swap} For example, consider a long receiver swaption with the underlying swap rate being $\bar{\mathcal{R}}_r$ and a short payer swaption with the underlying swap rate being $\bar{\mathcal{R}}_p > \bar{\mathcal{R}}_r$, with the swaptions having the same time to maturity $T$.  If the market swap rate $\mathcal{R}_T$ at date $T$ is  below $\bar{\mathcal{R}}_r$ then the receiver swaption will be in the money and will be exercised---one would rather receive  $\bar{\mathcal{R}}_r$ than $\mathcal{R}_T$ in this circumstance.  Likewise, if $\mathcal{R}_T > \bar{\mathcal{R}}_p$ then the payer swaption will be exercised---one would rather pay $\bar{\mathcal{R}}_p$ than $\mathcal{R}_T$ in this circumstance.  When $\bar{\mathcal{R}}_p >\mathcal{R}_T> \bar{\mathcal{R}}_r$, neither swaption is in the money.  Thus, we have the following for the investor who is long the receiver swaption and short the payer swaption:


- $\mathcal{R}_T< \bar{\mathcal{R}}_r \Longrightarrow$ receive $\bar{\mathcal{R}}_r$ and pay floating for the maturity of the swap contract,
- $\bar{\mathcal{R}}_r< \mathcal{R}_T< \bar{\mathcal{R}}_p \Longrightarrow$ neither swaption exercised,
- $\mathcal{R}_T > \bar{\mathcal{R}}_p \Longrightarrow$ receive $\bar{\mathcal{R}}_p$ and pay floating for the maturity of the swap contract.


Note that one can always pay floating just by borrowing short term; it is receiving fixed that is important here.  In the second case above, the investor can engage in a swap at date $T$  and receive the market swap rate $\mathcal{R}_T$.  Thus, the collar guarantees that he will receive at least $\bar{\mathcal{R}}_r$ and will receive no more than $\bar{\mathcal{R}}_p$, whatever might be the market swap rate at date $T$.

An institution such as a pension fund can use a receiver swap to help hedge its fixed-rate liabilities.  As an alternative, it can use a collar as just described.  The difference is that a forward receiver swap would guarantee a fixed rate to be received, whereas the collar leaves some residual risk---it guarantees only that the fixed rate will be between $\bar{\mathcal{R}}_r$ and $\bar{\mathcal{R}}_p$.
This risk may appear attractive.  In @exr-e_eicchorn, the lower rate $\bar{\mathcal{R}}_r$ is the market swap rate, and the higher rate $\bar{\mathcal{R}}_p$ is significantly higher; thus, it may appear that the worst-case scenario is the same as what one can get in the market with a swap and the best case is significantly better.  However, this is an illusion, because the appropriate comparison is with a forward swap (starting at the maturity of the swaptions) and the forward swap rate is substantially higher than the spot swap rate (due to the yield curve being steeply upward sloping).  This illusion may create a good marketing opportunity for sellers of collars.  
:::
